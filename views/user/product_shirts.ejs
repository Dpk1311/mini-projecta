<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- <link rel="stylesheet" href="dist/output.css"> -->
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.6/dist/medium-zoom.min.js"></script>
    <title>Document</title>
</head>

<body>
    <%- include('partials/navbar.ejs',user) %>
        <div class="flex bg-white items-center p-2 rounded-md m-5">
            <form class="input-group" style="display: inline-flex;" action="/productsearch" method="get">
                <input class="bg-gray-50 outline-none ml-1 block flex-grow" type="text" name="searchQuery"
                    id="searchQuery" placeholder="Search...">
                <button class="btn bg-gray-50 outline-none" type="submit">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" viewBox="0 0 20 20"
                        fill="currentColor">
                        <path fill-rule="evenodd"
                            d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                            clip-rule="evenodd"></path>
                    </svg>
                </button>
            </form>
        </div>
        <div class="flex space-x-4 ml-6">
            <%# console.log('product',productcollection); %>
                <label for="sort">Sort by:</label>
                <select name="sort" id="sort">
                    <option value="Price">Price</option>
                    <option value="Name">Name</option>
                </select>

                <!-- <label for="category">Filter by category:</label>
                <select name="category" id="category">
                    <option value="all">All</option>
                    <option value="shirts">Shirts</option>
                    <option value="pants">Pants</option>
                </select> -->
        </div>
        <div id="productList" class="flex flex-wrap  flex-row justify-center mt-20">
            <% productcollection.forEach((element)=> { %>
                <% console.log('details',element); %>
                    <% if(element.Instock) { %>
                        <div class="w-full md:w-1/2 xl:w-1/3 px-4 mb-10">
                            <div class="bg-white rounded-lg overflow-hidden">
                                <img src="<%= element.Image[0] %>" <%# console.log('images are',element.Image); %>
                                alt="image" class="w-50 product-image" />
                                <div class="p-8 sm:p-9 md:p-7 xl:p-9 text-center ">
                                    <h3>
                                        <a href="javascript:void(0)"
                                            class="font-semibold text-dark text-xl sm:text-2xl md:text-xl lg:text-2xl xl:text-2xl 2xl:text-2xl mb-4 block hover:text-primary">
                                            <%= element.Name %>
                                        </a>
                                    </h3>
                                    <p class="text-base text-body-color leading-relaxed mb-7">
                                        <%= element.Description %>>
                                    </p>
                                    <a href='/productpage?product_Id=<%= element._id %>'
                                        class="inline-block py-2 px-7 border border-[#E5E7EB] rounded-full text-base text-body-color font-medium hover:border-primary hover:bg-primary hover:text-white transition">
                                        View Details
                                    </a>
                                </div>
                            </div>
                        </div>
                        <% } %>
                            <% }); %>

        </div>



        <script>
            document.getElementById('sort').addEventListener('change', function () {
                let sortBy = this.value;
                let url = '/products?sort=' + sortBy; // Assuming your API endpoint is '/api/products'

                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        // Here, 'data' is the sorted list of products returned by the server.
                        // You can update your page with this data.

                        updatePage(data);
                    })
                    .catch(error => console.error('Error:', error));
            });

            function updatePage(products) {
                // Get a reference to the product list div
                let productListDiv = document.getElementById('productList');

                // Clear the existing product list
                productListDiv.innerHTML = '';

                // Add each product to the product list
                products.forEach(product => {
                    // Create a new div for the product
                    let productDiv = document.createElement('div');
                    productDiv.className = 'w-full md:w-1/2 xl:w-1/3 px-4 mb-10';

                    // Add the product details to the product div
                    productDiv.innerHTML = `<div class="bg-white rounded-lg overflow-hidden">
                <img src="${product.Image[0]}" alt="image" class="w-50 product-image" />
                <div class="p-8 sm:p-9 md:p-7 xl:p-9 text-center ">
                    <h3>
                        <a href="javascript:void(0)" class="font-semibold text-dark text-xl sm:text-2xl md:text-xl lg:text-2xl xl:text-2xl 2xl:text-2xl mb-4 block hover:text-primary">
                            ${product.Name}
                        </a>
                    </h3>
                    <p class="text-base text-body-color leading-relaxed mb-7">
                        Lorem ipsum dolor sit amet pretium consectetur adipiscing elit. Lorem consectetur
                        adipiscing elit.
                    </p>
                    <a href='/productpage?product_Id=${product._id}' class="inline-block py-2 px-7 border border-[#E5E7EB] rounded-full text-base text-body-color font-medium hover:border-primary hover:bg-primary hover:text-white transition">
                        View Details
                    </a>
                </div>
            </div>`

                    // Add the product div to the product list div
                    productListDiv.appendChild(productDiv);
                });
            }

        </script>



        <!-- <script>
                var products = <%#- JSON.stringify(productcollection) %>
                    console.log('products are', products); // Log the data for testing

                // Function to sort products by price or name
                const sortProducts = (field) => {
                    products.sort((a, b) => (a[field] > b[field]) ? 1 : -1);
                    // Render the sorted products on the page
                    renderProducts(products);
                };

                // Function to filter products by category
                const filterProducts = (category) => {
                    if (category === 'all') {
                        renderProducts(products); // Show all products
                    } else {
                        const filteredProducts = products.filter(product => product.category === category);
                        renderProducts(filteredProducts); // Show filtered products
                    }
                };

                // Function to render products on the page
                const renderProducts = (productsToRender) => {
                    // Clear the existing product listing
                    // Replace "productsContainer" with the actual container ID where you display products
                    const productsContainer = document.getElementById('productsContainer');
                    productsContainer.innerHTML = '';

                    // Loop through the products and create HTML elements for each
                    productsToRender.forEach(product => {
                        // Create product HTML elements and append them to "productsContainer"
                        // You can use EJS templating here to generate the product cards
                    });
                };

                // Event listeners for sorting and filtering
                document.getElementById('sort').addEventListener('change', (event) => {
                    sortProducts(event.target.value);
                });

                document.getElementById('category').addEventListener('change', (event) => {
                    filterProducts(event.target.value);
                });

                // Initial rendering of products
                renderProducts(products);
            </script> -->


</body>

</html>